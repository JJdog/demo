<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.lanswon</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>test-docker</name>
    <description>Demo project for Spring Boot</description>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>


    <properties>
        <java.version>1.8</java.version>
        <!--<docker.image.prefix>zhangsw</docker.image.prefix>-->
        <docker.registry>
            <!--192.168.2.8:8082-->
            jaswine.top:9950
        </docker.registry>

        <jar>${project.build.finalName}.jar</jar>

    </properties>

<!--这个不管用啊 和 setting.xml-serverid -->
    <distributionManagement>
        <snapshotRepository>
            <id>nexus-docker</id>
            <name>docker-snapshots</name>
            <url>http://192.168.2.8:8081/repository/docker-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.4.13</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <!--加不加没什么卵用-->
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!--这里指定打包镜像的名称${docker.registry}/${docker.image.prefix}/  -->
                            <repository>${docker.registry}/springboot-demo</repository>
                            <!--每次推至私服都最新的额 不指定tag默认为latest-->
                            <tag>latest</tag>
                            <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                            <buildArgs>
                                <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>

                       <dockerfile>Dockerfile</dockerfile>
                        </configuration>
                    </plugin>

        </plugins>
    </build>

</project>
